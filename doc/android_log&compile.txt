利用adb打印log的前期准备工作：
1 安装展讯adroid_usb驱动程序F:\Android\cg_android_tools\8810drv.rar
2 运行F:\Android\cg_android_tools\for_qetest\8810_catch_adblog\adb_setting\ins.bat
adb基本命令:
adb wait-for-device
adb get-state
adb kill-sever
adb start-sever
adb devices
adb shell

2.log抓取：
  Android log:    开始：for_qetest\8810_catch_adblog\LogAndroid2PC.bat
		  结束：for_qetest\8810_catch_adblog\StopLogging.bat
		  
		  
打印TAG为ContactsListActivity的相关log，并另存为ContactsListActivity.log文件
adb logcat -d -s ContactsListActivity >>ContactsListActivity.log

编译单个模块：
./mk sp8810ga u adr ./mk sp8810ga u adr ./packages/apps/Settings
eng版本
adb push Settings.apk /system/app

adb logcat:

个人认为有一下几个常用命令：
adb logcat -c 清除所有以前的日志
adb logcat -d 这个命令是在时间上倒过来用的 就是你先操作 然后敲这个命令 打出来的log就是你刚操作那段时间的log 而且自动退出log模式
adb logcat -s XXX这个是设置过滤用的 比如你只想查看FirstDemo的日志 就替换最后的XXX
adb logcat -d -f /sdcard/filename.log 将log输出到sd卡上

adb logcat -d -s ContactsListActivity >>f:\log\ContactsListActivity.log

adb logcat ActivityManager:I MyApp:D *:S

过滤 日志输出
每一个输出的Android日志信息都有一个标签和它的优先级.

日志的标签是系统部件原始信息的一个简要的标志。（比如：“View”就 是查看系统的标签）.
优先级有下列集中，是按照从低到高顺利排列的:
V ― Verbose (lowest priority)
D ― Debug
I ― Info
W ― Warning
E ― Error
F ― Fatal
S ― Silent (highest priority, on which nothing is ever printed)
在运行logcat的时候在前两列的信息中你就可以看到 logcat 的标签列表和优先级别,它是这样标出的:<priority>/<tag> .

下面是一个logcat输出的例子,它的优先级就似乎I,标签 就是ActivityManage:

I/ActivityManager(  585): Starting activity: Intent { action=android.intent.action...}
为了让日志输出能体现管理的级别,你还可以用过滤器来控制日志输出,过滤器可以帮助你描述 系统的标签等级.

过滤器语句按照下面的格式描tag:priority ... , tag 表 示是标签,priority 是表示标签的报告的最低等级. 从上面的tag的中可以得到日志的优先级. 你可以在过滤器中多次写tag:priority .

这些说明都只到空白结束。下面有一个列子，例子表示支持所有的日志信息，除了那些标签 为”ActivityManager”和优先级为”Info”以上的和标签为” MyApp”和优先级为” Debug”以上的。 小等级,优先权报告为tag.

adb logcat ActivityManager:I MyApp:D *:S
上面表达式的最后的元素 *:S ,，是设置所有的标 签为”silent”，所有日志只显示有”View” and “MyApp”的，用 *:S 的另一个用处是 能够确保日志输出的时候是按照过滤器的说明限制的，也让过滤器也作为一项输出到日志中.

下面的过滤语句指显示优先级为warning或更高的日志信息:

adb logcat *:W

控制 日志输出格式
日志信息包括了许多元数据域包括标签和优先级。可以修改日志的输出格式，所以可以显示出特 定的元数据域。可以通过 -v 选项得到格式化输出日志的相关信息.

brief ― Display priority/tag and PID of originating process (the default format).
process ― Display PID only.
tag ― Display the priority/tag only.
thread ― Display process:thread and priority/tag only.
raw ― Display the raw log message, with no other metadata fields.
time ― Display the date, invocation time, priority/tag, and PID of the originating process.
long ― Display all metadata fields and separate messages with a blank lines.
当启动了logcat ，你可以通过-v 选 项来指定输出格式:

[adb] logcat [-v <format>]
下面是用 thread 来产生的日志格式:

adb logcat -v thread
需要注意的是你只能-v 选项来规定输出格式 option.

查看 可用日志缓冲区
Android日志系统有循环缓冲区，并不是所有的日志系统都有默认循环缓冲区。为了得到 日志信息，你需要通过-b 选项来启动logcat 。如果要使用循环缓冲区，你需要查看剩余的 循环缓冲期:

radio ― 查看缓冲区的相关的信息.
events ― 查看和事件相关的的缓冲区.
main ― 查看主要的日志缓冲区
-b 选项使用方法:

[adb] logcat [-b <buffer>]
下面的例子表示怎么查看日志缓冲区包含radio 和 telephony信息:

adb logcat -b radio

Logcat命令列表
Option	Description
-b <buffer>	 加载一个可使用的日志缓冲区供查看，比如event 和radio . 默认值是main 。具体查看Viewing Alternative Log Buffers.
-c	 清楚屏幕上的日志.
-d	 输出日志到屏幕上.
-f <filename>	 指定输出日志信息的<filename> ， 默认是stdout .
-g	 输出指定的日志缓冲区，输出后退出.
-n <count>	 设置日志的最大数目<count> .， 默认值是4，需要和 -r 选 项一起使用。
-r <kbytes>	 每<kbytes> 时 输出日志，默认值为16，需要和-f 选 项一起使用.
-s	 设置默认的过滤级别为silent.
-v <format>	 设置日志输入格式，默认的是brief 格 式，要知道更多的支持的格式，参看Controlling Log Output Format .