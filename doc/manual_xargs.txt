【xargs】

xargs - build and execute command lines from standard input

xargs -r 然后没有输入则退出 no-run-if-empty
xargs -i 输入替换
xargs -n 每次输入参数个数
xargs -p 执行前询问用户
xargs -t 先打印命令然后执行 
xargs -0 文件名含有空格、圆括号和其他“禁用”字符 

find + xargs 删除文件名中含有空格的文件

问题：查找某个目录下更改时间超过7天的文件并删除它们。
 
方法一：
$ find . -type f -mtime +7 -print -exec rm {} \;
 
问题来了，在使用find命令的-exec选项处理匹配到的文件时，find命令将所有匹配到的文件一起传递给exec执行。不幸的是，有些系统对能够传递给exec的命令长度有限制，这样在find命令运行几分钟之后，就会出现溢出错误。错误信息通常是"参数列太长"或"参数列溢出"。这就是xargs命令的用处所在，特别是与find命令一起使用。find命令把匹配到的文件传递给xargs命令，而xargs命令每次只获取一部分文件而不是全部，不像-exec选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。在有些系统中，使用-exec选项会为处理每一个匹配到的文件而发起一个相应的进程，并非将匹配到的文件全部作为参数一次执行；这样在有些情况下就会出现进程过多，系统性能下降的问题，因而效率不高；而使用xargs命令则只有一个进程。另外，在使用xargs命令时，究竟是一次获取所有的参数，还是分批取得参数，以及每一次获取参数的数目都会根据该命令的选项及系统内核中相应的可调参数来确定。
 
方法二：
$ find . -type f -mtime +7 -print | xargs rm
 
还是有问题：当有许多包含空格、圆括号和其他“禁用”字符的文件时， xargs处理起来会比较困难。幸运的是，在Linux下find命令有一个选项-print0，它以null字符分隔输出的文件名而不是用新行字符。tar 和 xargs 等命令有 -0（或 --null）选项，这使它们能够理解这种形式的参数。
 
方法三：
$ find . -type f -mtime +7 -print0 | xargs -0 rm
 
但是遗憾的是这种方法在Solaris下不支持！不过不用担心，也有解决的方法：
 
方法四：
$ find . -type f -mtime +7 -print | while read l; do rm "$l";done
 
方法五：
$ find . -type f -mtime +7 -print | xargs -i echo '"{}"' | xargs rm